; (lets
;     (
;         (x 1)
;         (y x)
;     )

;     y
; )

(lets
    (
        (true   (lambda x (lambda y x)))
        (false  (lambda x (lambda y y)))
        (pair   (lambda x (lambda y (lambda f (f x y)))))
        (fst    (lambda p (p true)))
        (snd    (lambda p (p false)))
        (if
            (lambda cond
                (lambda ifTrue (lambda ifFalse (cond ifTrue ifFalse)))))
    )

    (fst (pair 9 5))
)

; (let x 1 (let f (lambda y x) (let x 2 (f 0))))
; (lambda x x 1)
; (let x 1 x)

; (snd (pair 9 5))

; let x n b == lambda x b n
; (lambda x (lambda f (lambda x (f 0) 2) (lambda y x)) 1)

; (let x 1 (let f (lambda y x) (let x 2 (f 0))))

; (x y)
