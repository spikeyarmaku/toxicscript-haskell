(letrec fact
    (lambda n ((= n 1) 1 (* n (fact (- n 1)))))
    (fact 5))

; (let Z
;     (lambda f
;         (
;             (lambda x (f (lambda v (x x v))))
;             (lambda x (f (lambda v (x x v))))
;         )
;     )
;     (
;         let fact (Y (lambda fact (lambda n (
;             (= n 1) 1 (* n (fact (- n 1)))
;         )))) (fact 5)
;     )
; )

; Z combinator
; (lambda f
;     (
;         (lambda x (f (lambda v (x x v))))
;         (lambda x (f (lambda v (x x v))))
;     )
; )